name: Run all checks on Kedro Starters

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{inputs.python-version}}
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install test requirements
        run: make install-test-requirements
      - name: Run Bandit
        run: bandit -ll -r .

  run-tests:
    strategy:
      matrix:
        os: [ windows-latest ]
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]
    runs-on: ${{ matrix.os }}
    env:
      HADOOP_HOME: 'C:\hadoop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{inputs.python-version}}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
#      - name: Install test requirements
#        run: make install-test-requirements
#      - name: Setup Java
#        uses: actions/setup-java@v1
#        with:
#          java-version: '11'
#      - name: Setup spark
#        uses: vemonet/setup-spark@v1
#        with:
#          spark-version: '3.4.1'
#          hadoop-version:
      - name: Run `kedro run` end to end tests for all starters
        run: |
          behave features/run.feature --tags=pyspark

  lint:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{inputs.python-version}}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install test requirements
        run: make install-test-requirements
      - name: Run linter for all starters
        run: behave features/lint.feature