version: 2.1

executors:
  docker:
    parameters:
      python_version:
        type: string
    docker:
      - image: circleci/python:<<parameters.python_version>>

commands:
  setup_requirements:
    parameters:
      python_version:
        type: string
    steps:
      - checkout
      - run:
          name: Grant CircleCI access to dependency locations
          command: |
            sudo chown -R circleci:circleci /usr/local/bin
            sudo chown -R circleci:circleci /usr/local/lib/python<<parameters.python_version>>/site-packages
      - run:
          name: Install pip setuptools
          command: python -m pip install -U "pip>=21.2" "setuptools>=38.0" wheel
      - run:
          name: Install test requirements
          command: sudo pip install -r test_requirements.txt
      - run:
          name: Pip freeze
          command: pip freeze
      - run:
          name: Install OpenJDK 8
          command: |
            wget https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/download/jdk8u322-b06/OpenJDK8U-jdk_aarch64_linux_8u322b06.tar.gz -O /tmp/openjdk-8.tar.gz
            sudo mkdir /jvm
            sudo tar xfvz /tmp/openjdk-8.tar.gz --directory /jvm
            rm -f /tmp/openjdk-8.tar.gz
            export JAVA_HOME=/jvm/openjdk-8u322-b06
            export PATH=$PATH:$JAVA_HOME/bin
            export PYSPARK_SUBMIT_ARGS="--master local[2] pyspark-shell"
            echo $JAVA_HOME
            echo $SPARK_HOME
            java -version


  e2e_run:
    description: Run `kedro run` end to end tests for all starters
    steps:
      - run:
          command: behave features/run.feature

  e2e_lint:
    description: Run `kedro lint` end to end tests for all starters
    steps:
      - run:
          command: behave features/lint.feature


jobs:
  security_scan:
    parameters:
      python_version:
        type: string
    executor:
      name: docker
      python_version: <<parameters.python_version>>
    steps:
      - setup_requirements:
          python_version: <<parameters.python_version>>
      - run:
          command: bandit -ll -r .

  run:
    parameters:
      python_version:
        type: string
    executor:
      name: docker
      python_version: <<parameters.python_version>>
    steps:
      - setup_requirements:
          python_version: <<parameters.python_version>>
      - e2e_run

  lint:
    parameters:
      python_version:
        type: string
    executor:
      name: docker
      python_version: <<parameters.python_version>>
    steps:
      - setup_requirements:
          python_version: <<parameters.python_version>>
      - e2e_lint


workflows:
  version: 2.1

  build:
    jobs:
      - security_scan:
          python_version: "3.8"
      - run:
          matrix:
            parameters:
              python_version: [ "3.7", "3.8", "3.9", "3.10" ]
      - lint:
          matrix:
            parameters:
              python_version: [ "3.7", "3.8", "3.9", "3.10" ]

